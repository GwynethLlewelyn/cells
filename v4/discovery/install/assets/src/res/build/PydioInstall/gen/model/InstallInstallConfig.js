'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * Pydio Cells Rest API
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * OpenAPI spec version: 1.0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * 

his class is auto generated by the swagger code generator program.
https://github.com/swagger-api/swagger-codegen.git
o not edit the class manually.

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */

var _ApiClient = require('../ApiClient');

var _ApiClient2 = _interopRequireDefault(_ApiClient);

var _InstallCheckResult = require('./InstallCheckResult');

var _InstallCheckResult2 = _interopRequireDefault(_InstallCheckResult);

var _InstallProxyConfig = require('./InstallProxyConfig');

var _InstallProxyConfig2 = _interopRequireDefault(_InstallProxyConfig);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
* The InstallInstallConfig model module.
* @module model/InstallInstallConfig
* @version 1.0
*/
var InstallInstallConfig = function () {
    /**
    * Constructs a new <code>InstallInstallConfig</code>.
    * @alias module:model/InstallInstallConfig
    * @class
    */

    function InstallInstallConfig() {
        _classCallCheck(this, InstallInstallConfig);

        this.internalUrl = undefined;
        this.dbConnectionType = undefined;
        this.dbTCPHostname = undefined;
        this.dbTCPPort = undefined;
        this.dbTCPName = undefined;
        this.dbTCPUser = undefined;
        this.dbTCPPassword = undefined;
        this.dbSocketFile = undefined;
        this.dbSocketName = undefined;
        this.dbSocketUser = undefined;
        this.dbSocketPassword = undefined;
        this.dbManualDSN = undefined;
        this.dbUseDefaults = undefined;
        this.dsName = undefined;
        this.dsPort = undefined;
        this.dsType = undefined;
        this.dsS3Custom = undefined;
        this.dsS3CustomRegion = undefined;
        this.dsS3ApiKey = undefined;
        this.dsS3ApiSecret = undefined;
        this.dsS3BucketDefault = undefined;
        this.dsS3BucketPersonal = undefined;
        this.dsS3BucketCells = undefined;
        this.dsS3BucketBinaries = undefined;
        this.dsS3BucketThumbs = undefined;
        this.dsS3BucketVersions = undefined;
        this.dsFolder = undefined;
        this.frontendHosts = undefined;
        this.frontendLogin = undefined;
        this.frontendPassword = undefined;
        this.frontendRepeatPassword = undefined;
        this.frontendApplicationTitle = undefined;
        this.frontendDefaultLanguage = undefined;
        this.licenseRequired = undefined;
        this.licenseString = undefined;
        this.CheckResults = undefined;
        this.ProxyConfig = undefined;
    }

    /**
    * Constructs a <code>InstallInstallConfig</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/InstallInstallConfig} obj Optional instance to populate.
    * @return {module:model/InstallInstallConfig} The populated <code>InstallInstallConfig</code> instance.
    */


    _createClass(InstallInstallConfig, null, [{
        key: 'constructFromObject',
        value: function constructFromObject(data, obj) {
            if (data) {
                obj = obj || new InstallInstallConfig();

                if (data.hasOwnProperty('internalUrl')) {
                    obj['internalUrl'] = _ApiClient2.default.convertToType(data['internalUrl'], 'String');
                }
                if (data.hasOwnProperty('dbConnectionType')) {
                    obj['dbConnectionType'] = _ApiClient2.default.convertToType(data['dbConnectionType'], 'String');
                }
                if (data.hasOwnProperty('dbTCPHostname')) {
                    obj['dbTCPHostname'] = _ApiClient2.default.convertToType(data['dbTCPHostname'], 'String');
                }
                if (data.hasOwnProperty('dbTCPPort')) {
                    obj['dbTCPPort'] = _ApiClient2.default.convertToType(data['dbTCPPort'], 'String');
                }
                if (data.hasOwnProperty('dbTCPName')) {
                    obj['dbTCPName'] = _ApiClient2.default.convertToType(data['dbTCPName'], 'String');
                }
                if (data.hasOwnProperty('dbTCPUser')) {
                    obj['dbTCPUser'] = _ApiClient2.default.convertToType(data['dbTCPUser'], 'String');
                }
                if (data.hasOwnProperty('dbTCPPassword')) {
                    obj['dbTCPPassword'] = _ApiClient2.default.convertToType(data['dbTCPPassword'], 'String');
                }
                if (data.hasOwnProperty('dbSocketFile')) {
                    obj['dbSocketFile'] = _ApiClient2.default.convertToType(data['dbSocketFile'], 'String');
                }
                if (data.hasOwnProperty('dbSocketName')) {
                    obj['dbSocketName'] = _ApiClient2.default.convertToType(data['dbSocketName'], 'String');
                }
                if (data.hasOwnProperty('dbSocketUser')) {
                    obj['dbSocketUser'] = _ApiClient2.default.convertToType(data['dbSocketUser'], 'String');
                }
                if (data.hasOwnProperty('dbSocketPassword')) {
                    obj['dbSocketPassword'] = _ApiClient2.default.convertToType(data['dbSocketPassword'], 'String');
                }
                if (data.hasOwnProperty('dbManualDSN')) {
                    obj['dbManualDSN'] = _ApiClient2.default.convertToType(data['dbManualDSN'], 'String');
                }
                if (data.hasOwnProperty('dbUseDefaults')) {
                    obj['dbUseDefaults'] = _ApiClient2.default.convertToType(data['dbUseDefaults'], 'Boolean');
                }
                if (data.hasOwnProperty('dsName')) {
                    obj['dsName'] = _ApiClient2.default.convertToType(data['dsName'], 'String');
                }
                if (data.hasOwnProperty('dsPort')) {
                    obj['dsPort'] = _ApiClient2.default.convertToType(data['dsPort'], 'String');
                }
                if (data.hasOwnProperty('dsType')) {
                    obj['dsType'] = _ApiClient2.default.convertToType(data['dsType'], 'String');
                }
                if (data.hasOwnProperty('dsS3Custom')) {
                    obj['dsS3Custom'] = _ApiClient2.default.convertToType(data['dsS3Custom'], 'String');
                }
                if (data.hasOwnProperty('dsS3CustomRegion')) {
                    obj['dsS3CustomRegion'] = _ApiClient2.default.convertToType(data['dsS3CustomRegion'], 'String');
                }
                if (data.hasOwnProperty('dsS3ApiKey')) {
                    obj['dsS3ApiKey'] = _ApiClient2.default.convertToType(data['dsS3ApiKey'], 'String');
                }
                if (data.hasOwnProperty('dsS3ApiSecret')) {
                    obj['dsS3ApiSecret'] = _ApiClient2.default.convertToType(data['dsS3ApiSecret'], 'String');
                }
                if (data.hasOwnProperty('dsS3BucketDefault')) {
                    obj['dsS3BucketDefault'] = _ApiClient2.default.convertToType(data['dsS3BucketDefault'], 'String');
                }
                if (data.hasOwnProperty('dsS3BucketPersonal')) {
                    obj['dsS3BucketPersonal'] = _ApiClient2.default.convertToType(data['dsS3BucketPersonal'], 'String');
                }
                if (data.hasOwnProperty('dsS3BucketCells')) {
                    obj['dsS3BucketCells'] = _ApiClient2.default.convertToType(data['dsS3BucketCells'], 'String');
                }
                if (data.hasOwnProperty('dsS3BucketBinaries')) {
                    obj['dsS3BucketBinaries'] = _ApiClient2.default.convertToType(data['dsS3BucketBinaries'], 'String');
                }
                if (data.hasOwnProperty('dsS3BucketThumbs')) {
                    obj['dsS3BucketThumbs'] = _ApiClient2.default.convertToType(data['dsS3BucketThumbs'], 'String');
                }
                if (data.hasOwnProperty('dsS3BucketVersions')) {
                    obj['dsS3BucketVersions'] = _ApiClient2.default.convertToType(data['dsS3BucketVersions'], 'String');
                }
                if (data.hasOwnProperty('dsFolder')) {
                    obj['dsFolder'] = _ApiClient2.default.convertToType(data['dsFolder'], 'String');
                }
                if (data.hasOwnProperty('frontendHosts')) {
                    obj['frontendHosts'] = _ApiClient2.default.convertToType(data['frontendHosts'], 'String');
                }
                if (data.hasOwnProperty('frontendLogin')) {
                    obj['frontendLogin'] = _ApiClient2.default.convertToType(data['frontendLogin'], 'String');
                }
                if (data.hasOwnProperty('frontendPassword')) {
                    obj['frontendPassword'] = _ApiClient2.default.convertToType(data['frontendPassword'], 'String');
                }
                if (data.hasOwnProperty('frontendRepeatPassword')) {
                    obj['frontendRepeatPassword'] = _ApiClient2.default.convertToType(data['frontendRepeatPassword'], 'String');
                }
                if (data.hasOwnProperty('frontendApplicationTitle')) {
                    obj['frontendApplicationTitle'] = _ApiClient2.default.convertToType(data['frontendApplicationTitle'], 'String');
                }
                if (data.hasOwnProperty('frontendDefaultLanguage')) {
                    obj['frontendDefaultLanguage'] = _ApiClient2.default.convertToType(data['frontendDefaultLanguage'], 'String');
                }
                if (data.hasOwnProperty('licenseRequired')) {
                    obj['licenseRequired'] = _ApiClient2.default.convertToType(data['licenseRequired'], 'Boolean');
                }
                if (data.hasOwnProperty('licenseString')) {
                    obj['licenseString'] = _ApiClient2.default.convertToType(data['licenseString'], 'String');
                }
                if (data.hasOwnProperty('CheckResults')) {
                    obj['CheckResults'] = _ApiClient2.default.convertToType(data['CheckResults'], [_InstallCheckResult2.default]);
                }
                if (data.hasOwnProperty('ProxyConfig')) {
                    obj['ProxyConfig'] = _InstallProxyConfig2.default.constructFromObject(data['ProxyConfig']);
                }
            }
            return obj;
        }

        /**
        * @member {String} internalUrl
        */

        /**
        * @member {String} dbConnectionType
        */

        /**
        * @member {String} dbTCPHostname
        */

        /**
        * @member {String} dbTCPPort
        */

        /**
        * @member {String} dbTCPName
        */

        /**
        * @member {String} dbTCPUser
        */

        /**
        * @member {String} dbTCPPassword
        */

        /**
        * @member {String} dbSocketFile
        */

        /**
        * @member {String} dbSocketName
        */

        /**
        * @member {String} dbSocketUser
        */

        /**
        * @member {String} dbSocketPassword
        */

        /**
        * @member {String} dbManualDSN
        */

        /**
        * @member {Boolean} dbUseDefaults
        */

        /**
        * @member {String} dsName
        */

        /**
        * @member {String} dsPort
        */

        /**
        * @member {String} dsType
        */

        /**
        * @member {String} dsS3Custom
        */

        /**
        * @member {String} dsS3CustomRegion
        */

        /**
        * @member {String} dsS3ApiKey
        */

        /**
        * @member {String} dsS3ApiSecret
        */

        /**
        * @member {String} dsS3BucketDefault
        */

        /**
        * @member {String} dsS3BucketPersonal
        */

        /**
        * @member {String} dsS3BucketCells
        */

        /**
        * @member {String} dsS3BucketBinaries
        */

        /**
        * @member {String} dsS3BucketThumbs
        */

        /**
        * @member {String} dsS3BucketVersions
        */

        /**
        * @member {String} dsFolder
        */

        /**
        * @member {String} frontendHosts
        */

        /**
        * @member {String} frontendLogin
        */

        /**
        * @member {String} frontendPassword
        */

        /**
        * @member {String} frontendRepeatPassword
        */

        /**
        * @member {String} frontendApplicationTitle
        */

        /**
        * @member {String} frontendDefaultLanguage
        */

        /**
        * @member {Boolean} licenseRequired
        */

        /**
        * @member {String} licenseString
        */

        /**
        * @member {Array.<module:model/InstallCheckResult>} CheckResults
        */

        /**
        * @member {module:model/InstallProxyConfig} ProxyConfig
        */

    }]);

    return InstallInstallConfig;
}();

exports.default = InstallInstallConfig;
