// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: templates.proto

package rest

import (
	service "github.com/pydio/cells/v4/common/proto/service"
	tree "github.com/pydio/cells/v4/common/proto/tree"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A template node is representing a file or a folder
type TemplateNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Whether it's a file or a folder
	IsFile bool `protobuf:"varint,1,opt,name=IsFile,proto3" json:"IsFile,omitempty"`
	// If stored in binary store, the binary Uuid
	BinaryUUUID string `protobuf:"bytes,2,opt,name=BinaryUUUID,proto3" json:"BinaryUUUID,omitempty"`
	// If it's embedded in binary
	EmbedPath string `protobuf:"bytes,3,opt,name=EmbedPath,proto3" json:"EmbedPath,omitempty"`
	// One or more children
	Children []*TemplateNode `protobuf:"bytes,4,rep,name=Children,proto3" json:"Children,omitempty"`
}

func (x *TemplateNode) Reset() {
	*x = TemplateNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_templates_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateNode) ProtoMessage() {}

func (x *TemplateNode) ProtoReflect() protoreflect.Message {
	mi := &file_templates_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateNode.ProtoReflect.Descriptor instead.
func (*TemplateNode) Descriptor() ([]byte, []int) {
	return file_templates_proto_rawDescGZIP(), []int{0}
}

func (x *TemplateNode) GetIsFile() bool {
	if x != nil {
		return x.IsFile
	}
	return false
}

func (x *TemplateNode) GetBinaryUUUID() string {
	if x != nil {
		return x.BinaryUUUID
	}
	return ""
}

func (x *TemplateNode) GetEmbedPath() string {
	if x != nil {
		return x.EmbedPath
	}
	return ""
}

func (x *TemplateNode) GetChildren() []*TemplateNode {
	if x != nil {
		return x.Children
	}
	return nil
}

// A template can be used to create files or tree from scratch
type Template struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier for this template
	UUID string `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	// Human friendly label
	Label string `protobuf:"bytes,2,opt,name=Label,proto3" json:"Label,omitempty"`
	// Template node, can be a file or a tree of folders
	Node *TemplateNode `protobuf:"bytes,3,opt,name=Node,proto3" json:"Node,omitempty"`
	// Associated policies
	Policies []*service.ResourcePolicy `protobuf:"bytes,4,rep,name=Policies,proto3" json:"Policies,omitempty"`
}

func (x *Template) Reset() {
	*x = Template{}
	if protoimpl.UnsafeEnabled {
		mi := &file_templates_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Template) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Template) ProtoMessage() {}

func (x *Template) ProtoReflect() protoreflect.Message {
	mi := &file_templates_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Template.ProtoReflect.Descriptor instead.
func (*Template) Descriptor() ([]byte, []int) {
	return file_templates_proto_rawDescGZIP(), []int{1}
}

func (x *Template) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *Template) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Template) GetNode() *TemplateNode {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *Template) GetPolicies() []*service.ResourcePolicy {
	if x != nil {
		return x.Policies
	}
	return nil
}

type ListTemplatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListTemplatesRequest) Reset() {
	*x = ListTemplatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_templates_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTemplatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTemplatesRequest) ProtoMessage() {}

func (x *ListTemplatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_templates_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTemplatesRequest.ProtoReflect.Descriptor instead.
func (*ListTemplatesRequest) Descriptor() ([]byte, []int) {
	return file_templates_proto_rawDescGZIP(), []int{2}
}

type ListTemplatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Templates []*Template `protobuf:"bytes,1,rep,name=Templates,proto3" json:"Templates,omitempty"`
}

func (x *ListTemplatesResponse) Reset() {
	*x = ListTemplatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_templates_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTemplatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTemplatesResponse) ProtoMessage() {}

func (x *ListTemplatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_templates_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTemplatesResponse.ProtoReflect.Descriptor instead.
func (*ListTemplatesResponse) Descriptor() ([]byte, []int) {
	return file_templates_proto_rawDescGZIP(), []int{3}
}

func (x *ListTemplatesResponse) GetTemplates() []*Template {
	if x != nil {
		return x.Templates
	}
	return nil
}

type CreateFromTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateUUID string     `protobuf:"bytes,1,opt,name=TemplateUUID,proto3" json:"TemplateUUID,omitempty"`
	TargetNode   *tree.Node `protobuf:"bytes,2,opt,name=TargetNode,proto3" json:"TargetNode,omitempty"`
}

func (x *CreateFromTemplateRequest) Reset() {
	*x = CreateFromTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_templates_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFromTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFromTemplateRequest) ProtoMessage() {}

func (x *CreateFromTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_templates_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFromTemplateRequest.ProtoReflect.Descriptor instead.
func (*CreateFromTemplateRequest) Descriptor() ([]byte, []int) {
	return file_templates_proto_rawDescGZIP(), []int{4}
}

func (x *CreateFromTemplateRequest) GetTemplateUUID() string {
	if x != nil {
		return x.TemplateUUID
	}
	return ""
}

func (x *CreateFromTemplateRequest) GetTargetNode() *tree.Node {
	if x != nil {
		return x.TargetNode
	}
	return nil
}

type CreateFromTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool       `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Node    *tree.Node `protobuf:"bytes,2,opt,name=Node,proto3" json:"Node,omitempty"`
}

func (x *CreateFromTemplateResponse) Reset() {
	*x = CreateFromTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_templates_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFromTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFromTemplateResponse) ProtoMessage() {}

func (x *CreateFromTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_templates_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFromTemplateResponse.ProtoReflect.Descriptor instead.
func (*CreateFromTemplateResponse) Descriptor() ([]byte, []int) {
	return file_templates_proto_rawDescGZIP(), []int{5}
}

func (x *CreateFromTemplateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateFromTemplateResponse) GetNode() *tree.Node {
	if x != nil {
		return x.Node
	}
	return nil
}

var File_templates_proto protoreflect.FileDescriptor

var file_templates_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x72, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x74, 0x72, 0x65, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x96, 0x01, 0x0a, 0x0c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x42,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x55, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x55, 0x55, 0x55, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x08, 0x43,
	0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x72, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x08, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x91, 0x01, 0x0a, 0x08,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x26, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x08, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x22,
	0x16, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x45, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2c, 0x0a, 0x09, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x09, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x22, 0x6b,
	0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x55, 0x55, 0x49, 0x44, 0x12,
	0x2a, 0x0a, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x74, 0x72, 0x65, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x22, 0x56, 0x0a, 0x1a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x74, 0x72, 0x65, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x4e,
	0x6f, 0x64, 0x65, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x70, 0x79, 0x64, 0x69, 0x6f, 0x2f, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x2f, 0x76, 0x34,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65,
	0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_templates_proto_rawDescOnce sync.Once
	file_templates_proto_rawDescData = file_templates_proto_rawDesc
)

func file_templates_proto_rawDescGZIP() []byte {
	file_templates_proto_rawDescOnce.Do(func() {
		file_templates_proto_rawDescData = protoimpl.X.CompressGZIP(file_templates_proto_rawDescData)
	})
	return file_templates_proto_rawDescData
}

var file_templates_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_templates_proto_goTypes = []interface{}{
	(*TemplateNode)(nil),               // 0: rest.TemplateNode
	(*Template)(nil),                   // 1: rest.Template
	(*ListTemplatesRequest)(nil),       // 2: rest.ListTemplatesRequest
	(*ListTemplatesResponse)(nil),      // 3: rest.ListTemplatesResponse
	(*CreateFromTemplateRequest)(nil),  // 4: rest.CreateFromTemplateRequest
	(*CreateFromTemplateResponse)(nil), // 5: rest.CreateFromTemplateResponse
	(*service.ResourcePolicy)(nil),     // 6: service.ResourcePolicy
	(*tree.Node)(nil),                  // 7: tree.Node
}
var file_templates_proto_depIdxs = []int32{
	0, // 0: rest.TemplateNode.Children:type_name -> rest.TemplateNode
	0, // 1: rest.Template.Node:type_name -> rest.TemplateNode
	6, // 2: rest.Template.Policies:type_name -> service.ResourcePolicy
	1, // 3: rest.ListTemplatesResponse.Templates:type_name -> rest.Template
	7, // 4: rest.CreateFromTemplateRequest.TargetNode:type_name -> tree.Node
	7, // 5: rest.CreateFromTemplateResponse.Node:type_name -> tree.Node
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_templates_proto_init() }
func file_templates_proto_init() {
	if File_templates_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_templates_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_templates_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Template); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_templates_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTemplatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_templates_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTemplatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_templates_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFromTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_templates_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFromTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_templates_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_templates_proto_goTypes,
		DependencyIndexes: file_templates_proto_depIdxs,
		MessageInfos:      file_templates_proto_msgTypes,
	}.Build()
	File_templates_proto = out.File
	file_templates_proto_rawDesc = nil
	file_templates_proto_goTypes = nil
	file_templates_proto_depIdxs = nil
}
